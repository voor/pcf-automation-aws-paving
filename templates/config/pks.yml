product-name: pivotal-container-service
network-properties:
  network:
    name: infrastructure
  service_network:
    name: services
  other_availability_zones:
    {{range (ds "data").azs}}
    - name: {{.}}
    {{end}}
  singleton_availability_zone:
    name: {{index (ds "data").azs 0}}
product-properties:
  .pivotal-container-service.pks_tls:
    value:
        cert_pem: |
{{ indent 10 (include "fullchain") }}
        private_key_pem: |
{{ indent 10 (include "privkey") }}
  .properties.pks_api_hostname:
    value: {{(ds "data").pks_api_endpoint}}
  .properties.plan1_selector.active.name:
    value: "small"
  .properties.plan1_selector.active.master_vm_type:
    value: m5.large
  .properties.plan1_selector.active.worker_vm_type:
    value: t3.medium
  .properties.plan1_selector.active.errand_vm_type:
    value: t3.micro
  .properties.plan1_selector.active.master_az_placement:
    value:
    {{range (ds "data").azs}}
    - {{.}}
    {{end}}
  .properties.plan1_selector.active.worker_az_placement:
    value:
    {{range (ds "data").azs}}
    - {{.}}
    {{end}}
  .properties.plan1_selector.active.allow_privileged_containers:
    value: true
  .properties.plan2_selector:
    value: "Plan Active"
  .properties.plan2_selector.active.name:
    value: "medium"
  .properties.plan2_selector.active.master_instances:
    value: "1"
  .properties.plan2_selector.active.master_vm_type:
    value: m5.large
  .properties.plan2_selector.active.worker_instances:
    value: "3"
  .properties.plan2_selector.active.worker_vm_type:
    value: t3.medium
  .properties.plan2_selector.active.errand_vm_type:
    value: t3.micro
  .properties.plan2_selector.active.master_az_placement:
    value:
    - {{index (ds "data").azs 0}}
  .properties.plan2_selector.active.worker_az_placement:
    value:
    {{range (ds "data").azs}}
    - {{.}}
    {{end}}
  .properties.plan2_selector.active.allow_privileged_containers: 
    value: true
  .properties.plan3_selector:
    value: "Plan Active"
  .properties.plan3_selector.active.name:
    value: "psp"
  .properties.plan3_selector.active.master_instances:
    value: "1"
  .properties.plan3_selector.active.master_vm_type:
    value: m5.large
  .properties.plan3_selector.active.worker_instances:
    value: "3"
  .properties.plan3_selector.active.worker_vm_type:
    value: t3.medium
  .properties.plan3_selector.active.errand_vm_type:
    value: t3.micro
  .properties.plan3_selector.active.master_az_placement:
    value:
    {{range (ds "data").azs}}
    - {{.}}
    {{end}}
  .properties.plan3_selector.active.worker_az_placement:
    value:
    {{range (ds "data").azs}}
    - {{.}}
    {{end}}
  .properties.plan3_selector.active.allow_privileged_containers: 
    value: true
  .properties.plan3_selector.active.admission_plugins: 
    value:
    - pod_security_policy
  .properties.plan10_selector:
    selected_option: active
    value: Plan Active
  .properties.plan10_selector.active.allow_privileged_containers:
    value: true
  .properties.plan10_selector.active.description:
    value: This is a plan for the {{ env.Getenv "PLAN_NAME" }} k8s that is automatically installed.
  .properties.plan10_selector.active.kubelet_drain_delete_local_data:
    value: true
  .properties.plan10_selector.active.kubelet_drain_force:
    value: true
  .properties.plan10_selector.active.kubelet_drain_force_node:
    value: false
  .properties.plan10_selector.active.kubelet_drain_grace_period:
    value: 10
  .properties.plan10_selector.active.kubelet_drain_ignore_daemonsets:
    value: true
  .properties.plan10_selector.active.kubelet_drain_timeout:
    value: 0
  .properties.plan10_selector.active.master_az_placement:
    value:
    {{range (ds "data").azs}}
    - {{.}}
    {{end}}
  .properties.plan10_selector.active.master_instances:
    value: 1
  .properties.plan10_selector.active.master_persistent_disk_type:
    value: "30720"
  .properties.plan10_selector.active.max_worker_instances:
    value: 50
  .properties.plan10_selector.active.name:
    value: {{ env.Getenv "PLAN_NAME" }}
  .properties.plan10_selector.active.worker_az_placement:
    value:
    {{range (ds "data").azs}}
    - {{.}}
    {{end}}
  .properties.plan10_selector.active.worker_instances:
    value: 2
  .properties.plan10_selector.active.worker_vm_type:
    value: r5.large
  .properties.cloud_provider:
    value: AWS
  .properties.cloud_provider.aws.iam_instance_profile_master:
    value: {{(ds "data").pks_master_iam_instance_profile_name}}
  .properties.cloud_provider.aws.iam_instance_profile_worker:
    value: {{(ds "data").pks_worker_iam_instance_profile_name}}
  .properties.oidc_selector:
    selected_option: disabled
    value: disabled
  .properties.telemetry_installation_purpose_selector:
    selected_option: demo_or_poc
    value: demo_or_poc
  .properties.telemetry_selector:
    selected_option: enabled
    value: enabled
  .properties.telemetry_selector.enabled.environment_provider:
    value: {{ env.Getenv "CUSTOMER_NUMBER" }}
resource-config:
  pivotal-container-service:
    elb_names:
    {{range (ds "data").pks_api_target_groups}}
    - alb:{{.}}
    {{end}}
    additional_vm_extensions:
    - pks-api-lb-security-groups
errand-config:
  delete-all-clusters:
    pre-delete-state: true
  pks-nsx-t-precheck:
    post-deploy-state: false
  smoke-tests:
    post-deploy-state: false
  upgrade-all-service-instances:
    post-deploy-state: false
  wavefront-alert-creation:
    post-deploy-state: false
  wavefront-alert-deletion:
    pre-delete-state: false

