---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: hairyhenderson/gomplate
    tag: alpine
inputs:
  - name: terraform-output
  # - This must be an initialized git repository.
  # - Note that any changes present in this input
  #   will be committed along with the file copied in
  #   by this task.
  - name: config
  # - This is the input folder containing the file to be committed.
  #   Typically, this will from some other task
  #   with an output that needs to be persisted.
  - name: certificates
outputs:
  - name: interpolated-config

params:
  ENV_NAME:
  PIVNET_API_TOKEN:
  AWS_ACCESS_KEY_ID:
  AWS_SECRET_ACCESS_KEY:
  OM_USERNAME:
  OM_PASSWORD:
  OM_DECRYPTION_PASSPHRASE:
run:
  path: /bin/sh
  args:
    - -c
    - |
        set -eu
        mkdir -p interpolated-config/$ENV_NAME/config
        /bin/gomplate --input-dir config/$ENV_NAME/config \
          -d data=file://$(pwd)/terraform-output/metadata?type=application/json \
          -d fullchain=file://$(pwd)/certificates/ssl/private/fullchain.pem \
          -d privkey=file://$(pwd)/certificates/ssl/private/privkey.pem \
          --output-dir interpolated-config/$ENV_NAME/config --verbose

        mkdir -p interpolated-config/$ENV_NAME/env
        /bin/gomplate -f config/$ENV_NAME/env/env.yml \
          -d data=file://$(pwd)/terraform-output/metadata?type=application/json \
          -o interpolated-config/$ENV_NAME/env/env.yml --verbose

        mkdir -p interpolated-config/$ENV_NAME/download-product-configs
        /bin/gomplate --input-dir config/$ENV_NAME/download-product-configs \
          -d data=file://$(pwd)/terraform-output/metadata?type=application/json \
          --output-dir interpolated-config/$ENV_NAME/download-product-configs --verbose
        
